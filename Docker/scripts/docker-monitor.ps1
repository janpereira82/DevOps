# Script de Monitoramento do Docker (Windows PowerShell)
# Autor: DevOps Team
# Descri√ß√£o: Monitora recursos e status dos containers Docker

# Fun√ß√£o para formatar tamanho em bytes
function Format-ByteSize {
    param([long]$bytes)
    $sizes = 'Bytes,KB,MB,GB,TB'
    $order = 0
    while ($bytes -ge 1024 -and $order -lt 4) {
        $bytes = $bytes / 1024
        $order++
    }
    return "{0:N2} {1}" -f $bytes, ($sizes -split ',')[$order]
}

Write-Host "üîç Monitoramento Docker Iniciado" -ForegroundColor Cyan
Write-Host "==============================`n" -ForegroundColor Cyan

# Status do Docker
$dockerStatus = docker info
Write-Host "üìä Status do Docker:" -ForegroundColor Yellow
Write-Host "Containers: $((docker ps -q).Count) em execu√ß√£o"
Write-Host "Imagens: $((docker images -q).Count) dispon√≠veis"
Write-Host "Volumes: $((docker volume ls -q).Count) criados"
Write-Host "Redes: $((docker network ls -q).Count) configuradas`n"

# Monitoramento de Containers
Write-Host "üêã Containers em Execu√ß√£o:" -ForegroundColor Yellow
docker stats --no-stream --format "table {{.Name}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.NetIO}}\t{{.BlockIO}}"

# Uso de Disco
Write-Host "`nüíæ Uso de Disco:" -ForegroundColor Yellow
$diskUsage = docker system df
Write-Host $diskUsage

# Alertas
Write-Host "`n‚ö†Ô∏è Verificando Alertas:" -ForegroundColor Yellow
$containers = docker ps -a --format "{{.Status}},{{.Names}}"
foreach ($container in $containers) {
    $status, $name = $container -split ","
    if ($status -like "*Exited*") {
        Write-Host "Container $name est√° parado!" -ForegroundColor Red
    }
}

Write-Host "`n‚úÖ Monitoramento Conclu√≠do" -ForegroundColor Green
