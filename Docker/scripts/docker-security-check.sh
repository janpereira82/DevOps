#!/bin/bash

# Script de Verifica√ß√£o de Seguran√ßa Docker (Linux/Mac)
# Autor: DevOps Team
# Descri√ß√£o: Realiza verifica√ß√µes de seguran√ßa b√°sicas no ambiente Docker

# Cores para output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
CYAN='\033[0;36m'
NC='\033[0m'

echo -e "${CYAN}üîí Iniciando verifica√ß√£o de seguran√ßa Docker...${NC}"

# Verificar vers√£o do Docker
echo -e "\n${YELLOW}üìã Verificando vers√£o do Docker:${NC}"
docker version
docker_info=$(docker info)

# Verificar configura√ß√µes de seguran√ßa b√°sicas
echo -e "\n${YELLOW}üõ°Ô∏è Verificando configura√ß√µes de seguran√ßa:${NC}"

# Verificar se o Docker est√° rodando como root
echo -e "\n${GREEN}1. Verifica√ß√£o de privil√©gios:${NC}"
if groups | grep -q docker; then
    echo "   ‚úì Usu√°rio atual est√° no grupo docker"
else
    echo -e "${RED}   ‚úó Usu√°rio atual n√£o est√° no grupo docker${NC}"
fi

# Verificar containers em execu√ß√£o com portas expostas
echo -e "\n${GREEN}2. Containers com portas expostas:${NC}"
docker ps --format "table {{.Names}}\t{{.Ports}}" | grep "0.0.0.0"

# Verificar containers em execu√ß√£o com volumes sens√≠veis
echo -e "\n${GREEN}3. Containers com volumes sens√≠veis:${NC}"
for container in $(docker ps -q); do
    volumes=$(docker inspect -f '{{range .Mounts}}{{.Source}}:{{.Destination}} {{end}}' "$container")
    if [ -n "$volumes" ]; then
        echo "   Container $container:"
        echo "   Volumes: $volumes"
    fi
done

# Verificar imagens sem tag espec√≠fica
echo -e "\n${GREEN}4. Imagens usando tag 'latest':${NC}"
docker images --format "{{.Repository}}:{{.Tag}}" | grep ":latest"

# Verificar redes Docker
echo -e "\n${GREEN}5. Configura√ß√µes de rede:${NC}"
docker network ls --format "table {{.Name}}\t{{.Driver}}\t{{.Scope}}"

# Verificar pol√≠ticas de reinicializa√ß√£o
echo -e "\n${GREEN}6. Containers com restart-policy:${NC}"
docker ps -a --format "{{.Names}}: {{.Status}}" | grep "Restarting"

# Verificar recursos limitados
echo -e "\n${GREEN}7. Limites de recursos:${NC}"
for container in $(docker ps -q); do
    limits=$(docker inspect -f '{{.Name}}: CPU: {{.HostConfig.CpuShares}}, Memory: {{.HostConfig.Memory}}' "$container")
    echo "   $limits"
done

# Recomenda√ß√µes
echo -e "\n${CYAN}üìù Recomenda√ß√µes de Seguran√ßa:${NC}"
echo "1. Use tags espec√≠ficas de vers√£o em vez de 'latest'"
echo "2. Limite recursos (CPU/mem√≥ria) para todos os containers"
echo "3. Evite expor portas desnecessariamente para 0.0.0.0"
echo "4. Utilize redes Docker personalizadas em vez da rede 'bridge' padr√£o"
echo "5. Implemente pol√≠ticas de reinicializa√ß√£o apropriadas"
echo "6. Escaneie regularmente as imagens por vulnerabilidades"
echo "7. Mantenha o Docker e as imagens atualizados"

echo -e "\n${GREEN}‚úÖ Verifica√ß√£o de seguran√ßa conclu√≠da!${NC}"
