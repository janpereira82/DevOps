# Script de Verifica√ß√£o de Seguran√ßa Docker (Windows PowerShell)
# Autor: DevOps Team
# Descri√ß√£o: Realiza verifica√ß√µes de seguran√ßa b√°sicas no ambiente Docker

Write-Host "üîí Iniciando verifica√ß√£o de seguran√ßa Docker..." -ForegroundColor Cyan

# Verificar vers√£o do Docker
Write-Host "`nüìã Verificando vers√£o do Docker:" -ForegroundColor Yellow
docker version
$dockerInfo = docker info

# Verificar configura√ß√µes de seguran√ßa b√°sicas
Write-Host "`nüõ°Ô∏è Verificando configura√ß√µes de seguran√ßa:" -ForegroundColor Yellow

# Verificar se o Docker est√° rodando como root (Windows n√£o √© relevante, mas mantido para compatibilidade)
Write-Host "`n1. Verifica√ß√£o de privil√©gios:" -ForegroundColor Green
Write-Host "   ‚úì Docker Desktop no Windows j√° gerencia privil√©gios adequadamente"

# Verificar containers em execu√ß√£o com portas expostas
Write-Host "`n2. Containers com portas expostas:" -ForegroundColor Green
docker ps --format "table {{.Names}}\t{{.Ports}}" | Where-Object { $_ -match "0.0.0.0" }

# Verificar containers em execu√ß√£o com volumes sens√≠veis
Write-Host "`n3. Containers com volumes sens√≠veis:" -ForegroundColor Green
docker ps -q | ForEach-Object {
    $volumes = docker inspect -f '{{range .Mounts}}{{.Source}}:{{.Destination}} {{end}}' $_
    if ($volumes) {
        Write-Host "   Container $_:"
        Write-Host "   Volumes: $volumes"
    }
}

# Verificar imagens sem tag espec√≠fica
Write-Host "`n4. Imagens usando tag 'latest':" -ForegroundColor Green
docker images --format "{{.Repository}}:{{.Tag}}" | Where-Object { $_ -match ":latest" }

# Verificar redes Docker
Write-Host "`n5. Configura√ß√µes de rede:" -ForegroundColor Green
docker network ls --format "table {{.Name}}\t{{.Driver}}\t{{.Scope}}"

# Verificar pol√≠ticas de reinicializa√ß√£o
Write-Host "`n6. Containers com restart-policy:" -ForegroundColor Green
docker ps -a --format "{{.Names}}: {{.Status}}" | Where-Object { $_ -match "Restarting" }

# Verificar recursos limitados
Write-Host "`n7. Limites de recursos:" -ForegroundColor Green
docker ps -q | ForEach-Object {
    $limits = docker inspect -f '{{.Name}}: CPU: {{.HostConfig.CpuShares}}, Memory: {{.HostConfig.Memory}}' $_
    Write-Host "   $limits"
}

# Recomenda√ß√µes
Write-Host "`nüìù Recomenda√ß√µes de Seguran√ßa:" -ForegroundColor Cyan
Write-Host "1. Use tags espec√≠ficas de vers√£o em vez de 'latest'"
Write-Host "2. Limite recursos (CPU/mem√≥ria) para todos os containers"
Write-Host "3. Evite expor portas desnecessariamente para 0.0.0.0"
Write-Host "4. Utilize redes Docker personalizadas em vez da rede 'bridge' padr√£o"
Write-Host "5. Implemente pol√≠ticas de reinicializa√ß√£o apropriadas"
Write-Host "6. Escaneie regularmente as imagens por vulnerabilidades"
Write-Host "7. Mantenha o Docker e as imagens atualizados"

Write-Host "`n‚úÖ Verifica√ß√£o de seguran√ßa conclu√≠da!" -ForegroundColor Green
